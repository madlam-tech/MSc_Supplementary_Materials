#!/bin/bash -e
#SBATCH --account massey03345
#SBATCH -J pseudofinder
#SBATCH --time 12:00:00
#SBATCH --mem 10GB
#SBATCH --ntasks 1
#SBATCH --cpus-per-task 8
#SBATCH -e pseudofinder_%j.err
#SBATCH -o pseudofinder_%j.log

# Load required modules
module load prokka/1.14.5-GCC-9.2.0
module load DIAMOND/2.1.6-GCC-11.3.0
module load BLAST/2.13.0-GCC-11.3.0
module load BLASTDB/2024-04
module load Python/3.10.5-gimkl-2022a

# Input directory directly set to the specified path
input_dir="./prokka"
output_dir="pseudogene_output"
prokka_output_dir="prokka_output"

# Ensure the directory structure is clean before starting
rm -rf "$output_dir"
rm -rf "$prokka_output_dir"
mkdir -p "$output_dir"
mkdir -p "$prokka_output_dir"

# Find .fasta files in the specified directory and its subdirectories
find "$input_dir" -type f -name "*.fasta" | while read -r fasta_file; do
    # Extract basename without extension
    basename=$(basename "$fasta_file" .fasta)
    
    echo "Processing file: $fasta_file" >> script_log.txt

    # Run Prokka with --compliant flag to generate Genbank compliant files
    prokka --compliant --outdir "$prokka_output_dir/$basename" --prefix "$basename" "$fasta_file" >> script_log.txt 2>&1

    # Define the path to the .gbk file generated by Prokka
    gbk_file="$prokka_output_dir/$basename/$basename.gbk"

    # Check if the .gbk file was created
    if [ -f "$gbk_file" ]; then
        echo "Prokka successfully generated $gbk_file" >> script_log.txt

        # Create a directory for each file processed
        mkdir -p "$output_dir/$basename"

        # Run pseudofinder.py for the current file
        ./pseudofinder.py annotate --diamond --skip_makedb --compliant -g "$gbk_file" -db /nesi/nobackup/massey03345/uniprot/uniprot_sprot.dmnd -op "$output_dir/$basename" >> script_log.txt 2>&1

        if [ $? -eq 0 ]; then
            echo "Pseudofinder completed for $gbk_file" >> script_log.txt
        else
            echo "Pseudofinder failed for $gbk_file" >> script_log.txt
        fi
    else
        echo "Prokka failed to generate $gbk_file" >> script_log.txt
    fi
done

echo "Script completed" >> script_log.txt
